library(ggplot2)
acid <- read.csv('/Users/AU775281/Documents/PhD/Acidification/Results/Lab/Acid level requirement.csv')
x_line <- acid$mean[acid$s.no == 8]
lab1 <- ggplot(acid, aes(x = mean, y = acid)) +
geom_ribbon(aes(xmin = mean - std, xmax = mean + std),
fill = "#f28e2b", alpha = 0.5) +
geom_line(size = 0.5, color = "#4e79a7") +
geom_point(size = 2.5, shape = 16, alpha = 1, color = "#4e79a7") +
geom_vline(xintercept = x_line, color = "#BC544B", linetype = "dashed", size = 1) +  # Red vertical line
scale_x_continuous(breaks = seq(0, 11, by = 1)) +
scale_y_continuous(breaks = seq(0, 15, by = 2)) +
labs(
y = expression("Acid (kg ton"^{-1}*")"),
x = "Slurry pH"
) +
theme_bw() +
theme(
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = "bottom",
panel.grid = element_blank()
) +
guides(color = guide_legend(nrow = 1)); lab1
library(ggplot2)
acid <- read.csv('/Users/AU775281/Documents/PhD/Acidification/Results/Lab/Acid level requirement.csv')
x_line <- acid$mean[acid$s.no == 8]
lab1 <- ggplot(acid, aes(x = mean, y = acid)) +
geom_ribbon(aes(xmin = mean - std, xmax = mean + std),
fill = "#f28e2b", alpha = 0.5) +
geom_line(linewidth = 0.5, color = "#4e79a7") +
geom_point(size = 2.5, shape = 16, alpha = 1, color = "#4e79a7") +
geom_vline(xintercept = x_line, color = "#BC544B", linetype = "dashed", size = 1) +  # Red vertical line
scale_x_continuous(breaks = seq(0, 11, by = 1)) +
scale_y_continuous(breaks = seq(0, 15, by = 2)) +
labs(
y = expression("Acid (kg ton"^{-1}*")"),
x = "Slurry pH"
) +
theme_bw() +
theme(
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = "bottom",
panel.grid = element_blank()
) +
guides(color = guide_legend(nrow = 1)); lab1
#Saving graph#
ggsave("/Users/AU775281/Documents/PhD/Acidification/Results/Lab.png",
plot = lab1,
width = 12,
height = 10,
dpi = 300,
bg = "white")
#Saving graph#
ggsave("/Users/AU775281/Documents/PhD/Acidification/Results/Lab.png",
plot = lab1,
width = 10,
height = 8,
dpi = 400,
bg = "white")
#Saving graph#
ggsave("/Users/AU775281/Documents/PhD/Acidification/Results/Lab.png",
plot = lab1,
width = 8,
height = 6,
dpi = 400,
bg = "white")
#Saving graph#
ggsave("/Users/AU775281/Documents/PhD/Acidification/Results/Lab/S1.png",
plot = lab1,
width = 8,
height = 6,
dpi = 400,
bg = "white")
#library
library(ggplot2)
#Importing data
acid <- read.csv('/Users/AU775281/Documents/PhD/Acidification/Results/Lab/Acid level requirement.csv')
#Defining the pH selected point
x_line <- acid$mean[acid$s.no == 8]
#Making graph
lab1 <- ggplot(acid, aes(x = mean, y = acid)) +
geom_ribbon(aes(xmin = mean - std, xmax = mean + std),
fill = "#f28e2b", alpha = 0.5) +
geom_line(linewidth = 0.5, color = "#4e79a7") +
geom_point(size = 2.5, shape = 16, alpha = 1, color = "#4e79a7") +
geom_vline(xintercept = x_line, color = "#BC544B", linetype = "dashed", size = 1) +  # Red vertical line
scale_x_continuous(breaks = seq(0, 11, by = 1)) +
scale_y_continuous(breaks = seq(0, 15, by = 2)) +
labs(
y = expression("Acid (g kg"^{-1}*")"),
x = "Slurry pH"
) +
theme_bw() +
theme(
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = "bottom",
panel.grid = element_blank()
) +
guides(color = guide_legend(nrow = 1)); lab1
#Saving graph#
ggsave("/Users/AU775281/Documents/PhD/Acidification/Results/Lab/S1.png",
plot = lab1,
width = 8,
height = 6,
dpi = 400,
bg = "white")
#library
library(ggplot2)
#Importing data
acid <- read.csv('/Users/AU775281/Documents/PhD/Acidification/Results/Lab/Acid level requirement.csv')
#Defining the pH selected point
x_line <- acid$mean[acid$s.no == 8]
#Making graph
lab1 <- ggplot(acid, aes(x = mean, y = acid)) +
geom_ribbon(aes(xmin = mean - std, xmax = mean + std),
fill = "#f28e2b", alpha = 0.5) +
geom_line(linewidth = 0.5, color = "#4e79a7") +
geom_point(size = 2.5, shape = 16, alpha = 1, color = "#4e79a7") +
geom_vline(xintercept = x_line, color = "#BC544B", linetype = "dashed", size = 1) +  # Red vertical line
scale_x_continuous(breaks = seq(0, 11, by = 1)) +
scale_y_continuous(breaks = seq(0, 15, by = 2)) +
labs(
y = expression("Acid (kg ton"^{-1}*")"),
x = "Slurry pH"
) +
theme_bw() +
theme(
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = "bottom",
panel.grid = element_blank()
) +
guides(color = guide_legend(nrow = 1)); lab1
#Saving graph#
ggsave("/Users/AU775281/Documents/PhD/Acidification/Results/Lab/S1.png",
plot = lab1,
width = 8,
height = 6,
dpi = 400,
bg = "white")
rm(list = ls())
#Setting working directory
setwd('/Users/AU775281/Documents/GitHub/Fakhar-2025-Acidification/N2O/R Script')
source('packages.R')
source('functions.R')
source('functions.R')
source('HMR.R')
source('setting.R')
source('cumulative.R')
source('setting.R')
source('cumulative.R')
#Convert to numeric
flux.dat <- flux.dat %>% mutate(flux = as.numeric(flux))
flux.dat <- flux.dat %>% mutate(flux_g_ha_day = as.numeric(flux_g_ha_day))
#Calculating cumulative emissions#
flux.dat$cum.micro <- mintegrate((flux.dat$elapsed.time), flux.dat$flux, by = flux.dat$replicate, method = 'trap') #(N2O-N ug m^-2)
flux.dat$cum.ha <- mintegrate((flux.dat$elapsed.time), flux.dat$flux_g_ha_day, by = flux.dat$replicate, method = 'trap') #(N2O-N g ha^-1)
#Calculating avg and sd
flux.dat.summary <- aggregate(
flux ~ elapsed.time + treatment,
data = flux.dat,
FUN = function(x) c(mean = mean(x, na.rm = TRUE), sd = sd(x, na.rm = TRUE))
)
# Convert the list columns to separate columns for plots#
flux.dat.summary <- do.call(data.frame, flux.dat.summary)
colnames(flux.dat.summary)[3:4] <- c("mean", "sd")  # Rename columns
#Calculating avg and sd for cumulative
cum.summary <- aggregate(
cum.micro ~ elapsed.time + group,
data = flux.dat,
FUN = function(x) c(mean = mean(x, na.rm = TRUE), sd = sd(x, na.rm = TRUE))
)
View(flux.dat)
#Calculating avg and sd for cumulative
cum.summary <- aggregate(
cum.micro ~ elapsed.time + treatment,
data = flux.dat,
FUN = function(x) c(mean = mean(x, na.rm = TRUE), sd = sd(x, na.rm = TRUE))
)
# Convert the list columns to separate columns for plots#
cum.summary <- do.call(data.frame, cum.summary)
colnames(cum.summary)[3:4] <- c("mean", "sd")  # Rename columns
#Filtering last elapsed time
cum.summary$elapsed.time <- as.numeric(as.character(cum.summary$elapsed.time))
cum.last <- subset(cum.summary, elapsed.time == max(elapsed.time))
#Reformatting date to ddmmyy
flux.dat <- flux.dat %>%
mutate(
date = format(as.Date(date, format="%d%m%y"), "%d-%m-%y")
)
#Defining the order of treatment groups#
flux.dat$group <- factor(flux.dat$treatment, levels = c("Control", "Acid treatment"))
# Defining colors for each group#
category_colors <- c(
"Acid treatment" = "#4e79a7",
"Control" = "#f28e2b"
)
#Plot N2O flux#
Fluxes <- ggplot(flux.dat.summary, aes(x = elapsed.time, y = mean, color = treatment, fill = treatment)) +
geom_ribbon(aes(ymin = mean - sd, ymax = mean + sd), alpha = 0.3, color = NA) +
geom_line(size = 1) +
geom_point(size = 2, shape = 16, alpha = 0.7) +
scale_color_manual(values = category_colors, labels = c("Acid treatment", "Control")) +
scale_fill_manual(values = category_colors, labels = c("Acid treatment", "Control")) +
scale_x_continuous(breaks = seq(0, 30, by = 5)) +
scale_y_continuous(breaks = seq(-0.3, 90, by = 20), expand = expansion(mult = c(0, 0.3))) +
labs(
y = expression(paste(mu, "g N" [2], "O-N ", m^{-2}, " ", h^{-1})),
x = "Time after slurry application (days)",
color = "Treatment"
) +
theme_bw() +
theme(
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
guides(color = guide_legend(nrow = 1)); Fluxes
#Plot N2O flux#
Fluxes <- ggplot(flux.dat.summary, aes(x = elapsed.time, y = mean, color = treatment, fill = treatment)) +
geom_ribbon(aes(ymin = mean - sd, ymax = mean + sd), alpha = 0.3, color = NA) +
geom_line(linewidth = 1) +
geom_point(size = 2, shape = 16, alpha = 0.7) +
scale_color_manual(values = category_colors, labels = c("Acid treatment", "Control")) +
scale_fill_manual(values = category_colors, labels = c("Acid treatment", "Control")) +
scale_x_continuous(breaks = seq(0, 30, by = 5)) +
scale_y_continuous(breaks = seq(-0.3, 90, by = 20), expand = expansion(mult = c(0, 0.3))) +
labs(
y = expression(paste(mu, "g N" [2], "O-N ", m^{-2}, " ", h^{-1})),
x = "Time after slurry application (days)",
color = "Treatment"
) +
theme_bw() +
theme(
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
plot.title = element_text(size = 16, hjust = 0.5),
strip.text = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
guides(color = guide_legend(nrow = 1)); Fluxes
#Cumulative emissions
cumplot <- ggplot(cum.last, aes(x = group, y = mean, fill = group)) +
geom_bar(stat = "identity", width = 0.6, color = "black") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2) +
scale_fill_manual(values = category_colors, labels = c("Control", "Acid treatment")) +
scale_y_continuous(breaks = seq(0, 510, by = 100), limits = c(0, 510), expand = c(0, 0)) +
labs(
y = expression("Cumulative N"[2]*"O loss ("*mu*"g "*m^{-2}*")")
) +
theme_bw() +
theme(
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = 0.5),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = c(1, 1),
legend.background = element_rect(fill = NA, color = NA),
legend.justification = c("right", "top"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
guides(color = guide_legend(nrow = 2));cumplot
#Cumulative emissions
cumplot <- ggplot(cum.last, aes(x = group, y = mean, fill = treatment)) +
geom_bar(stat = "identity", width = 0.6, color = "black") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2) +
scale_fill_manual(values = category_colors, labels = c("Control", "Acid treatment")) +
scale_y_continuous(breaks = seq(0, 510, by = 100), limits = c(0, 510), expand = c(0, 0)) +
labs(
y = expression("Cumulative N"[2]*"O loss ("*mu*"g "*m^{-2}*")")
) +
theme_bw() +
theme(
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = 0.5),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = c(1, 1),
legend.background = element_rect(fill = NA, color = NA),
legend.justification = c("right", "top"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
guides(color = guide_legend(nrow = 2));cumplot
#Cumulative emissions
cumplot <- ggplot(cum.last, aes(x = treatment, y = mean, fill = treatment)) +
geom_bar(stat = "identity", width = 0.6, color = "black") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2) +
scale_fill_manual(values = category_colors, labels = c("Control", "Acid treatment")) +
scale_y_continuous(breaks = seq(0, 510, by = 100), limits = c(0, 510), expand = c(0, 0)) +
labs(
y = expression("Cumulative N"[2]*"O loss ("*mu*"g "*m^{-2}*")")
) +
theme_bw() +
theme(
axis.title = element_text(size = 12),
axis.text = element_text(size = 12),
plot.title = element_text(size = 12, hjust = 0.5),
strip.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(),
legend.position = c(1, 1),
legend.background = element_rect(fill = NA, color = NA),
legend.justification = c("right", "top"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
guides(color = guide_legend(nrow = 2));cumplot
data <- read.csv('/Users/AU775281/Documents/PhD/Acidification/Results/Figures/Data/N2O.csv')
View(data)
data <- read.csv('/Users/AU775281/Documents/GitHub/Fakhar-2025-Acidification/N2O/Raw data/N2Ostat.csv')
#fix data by make tittle row
fix_colnames <- function(df) {
colnames(df) <- df[1, ]
df <- df[-1, ]
return(df)
}
data <- fix_colnames(data)
data$cum.micro <- as.numeric(data$cum.micro)
# Filtering the data to get the last time point for each treatment
data.last <- subset(data, elapsed.time == max(elapsed.time))
################################################################################################
################################################################################################
#Does acidification had any effect?
################################################################################################
#Check normality
shapiro <- shapiro.test(data.last$cum.micro)
shapiro # Data is normally distributed
#Check homogeneity log transformed
levene <- leveneTest(cum.micro ~ treatment, data = data.last)
levene
# Load required libraries
library(dplyr)
library(ggplot2)
library(lme4)
library(lmerTest)
library(car)
library(emmeans)
library(agricolae)
data <- read.csv('/Users/AU775281/Documents/GitHub/Fakhar-2025-Acidification/N2O/Raw data/N2Ostat.csv')
#fix data by make tittle row
fix_colnames <- function(df) {
colnames(df) <- df[1, ]
df <- df[-1, ]
return(df)
}
data <- fix_colnames(data)
data$cum.micro <- as.numeric(data$cum.micro)
# Filtering the data to get the last time point for each treatment
data.last <- subset(data, elapsed.time == max(elapsed.time))
################################################################################################
################################################################################################
#Does acidification had any effect?
################################################################################################
#Check normality
shapiro <- shapiro.test(data.last$cum.micro)
shapiro # Data is normally distributed
#Check homogeneity log transformed
levene <- leveneTest(cum.micro ~ treatment, data = data.last)
levene
#Since assumption are normally distributed we used anova
anova_model <- aov(cum.micro ~ treatment, data = data.last)
summary(anova_model) #Acidification do not have any statistically significant effec
TukeyHSD(anova_model)
#HSD.test for alphbets
tukey <- HSD.test(anova_model, "treatment", group = TRUE)
tukey$groups
# Convert relevant columns to factors (if not already)
data$replicate <- as.factor(data$replicate)
data$flux.ug <- as.numeric(data$flux.ug)
#Fitting model
model1 <- lmer(flux.ug ~ treatment * elapsed.time + (1 | replicate), data = data)
#Get estimated marginal means for treatment at each time point
emm <- emmeans(model1, ~ treatment | elapsed.time)
#Pairwise comparisons between treatments at each time point
contrast_results <- contrast(emm, method = "pairwise", adjust = "tukey")
#View summary of contrasts with significance
summary(contrast_results)
